{"version":3,"sources":["Reducers/MainReducer.js","Reducers/index.js","Actions/types.js","Components/Common/Typography.js","Components/Common/Select.js","Components/QMoney/QMoney.js","Components/QMoney/data.js","App.js","serviceWorker.js","index.js"],"names":["initialState","selectedUser","userList","userData","errorMsg","isError","errorCode","chartData","labelArray","absoluteReturnArray","annualReturnArray","appReducers","combineReducers","MainReducer","state","action","type","payload","msg","code","getFontFamily","getFontSize","getFontWeight","_Typography","props","classes","passedProps","color","className","root","style","fontFamily","fontSize","fontWeight","getColor","letterSpacing","children","defaultProps","connect","theme","themeReducer","withStyles","opacity","Select","onMeChange","e","data","setState","input","text","handleMeChange","value","onSearchChange","searchQuery","console","log","selectData","length","find","item","idx","selectedValue","prevProps","prevState","this","parentProps","Autocomplete","autoHighlight","loading","inputValue","onInputChange","event","onChange","id","width","options","getOptionLabel","option","params","TextField","label","variant","Component","selectRoot","height","searchRoot","clearButton","palette","primary","black","searchInput","backgroundColor","white","searchLabel","QMoney","getUserList","setUserListAction","setUserDataAction","setSelectedUser","getGraphResult","axios","get","then","response","forEach","elem","push","name","catch","error","finally","userInfo","setErrorMsgAction","disableErrorStateAction","setChartDataAction","post","annualizedReturns","symbol","totalReturns","annualizedReturn","processedData","message","includes","JSON","stringify","bind","val","Grid","container","rootContainer","xs","AppBar","position","Toolbar","padding","marginRight","cursor","borderRight","textAlign","icon","size","alt","borderBottom","boxShadow","minHeight","sm","md","lg","tableContainer","marginBottom","handleUserChange","title","columns","field","cellStyle","lineHeight","portfolioTrades","paging","sorting","search","headerStyle","graphContainer","margin","errorMsgContainer","errorInfo","marginTop","Paper","paper","graphHeading","cornerRadius","legend","display","scales","yAxes","barPercentage","labels","datasets","map","borderColor","radius","borderWidth","borderRadius","hoverBackgroundColor","toFixed","dispatch","user","breakpoints","down","boxSizing","border","overflowY","erroIcon","flexOrder","library","add","faMoneyBillWaveAlt","faExclamationSquare","App","Boolean","window","location","hostname","match","store","createStore","rootReducer","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82964a0d.chunk.js","sourcesContent":["import {\n  SET_CHART_DATA,\n  SET_SELECTED_USER,\n  SET_USER_LIST,\n  SET_USER_DATA,\n  SET_ERROR_MSG,\n  DISABLE_ERROR_STATE\n} from \"../Actions/types\";\n\nconst initialState = {\n  selectedUser: null,\n  userList: [],\n  userData: [],\n  errorMsg: \"\",\n  isError: false,\n  errorCode: \"\",\n  chartData: { labelArray: [], absoluteReturnArray: [], annualReturnArray: [] }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_SELECTED_USER:\n      return {\n        ...state,\n        selectedUser: action.payload\n      };\n    case SET_CHART_DATA:\n      return {\n        ...state,\n        chartData: action.payload\n      };\n    case SET_USER_LIST:\n      return {\n        ...state,\n        userList: action.payload\n      };\n    case SET_USER_DATA:\n      return {\n        ...state,\n        userData: action.payload\n      };\n    case SET_ERROR_MSG:\n      return {\n        ...state,\n        errorMsg: action.payload.msg,\n        isError: true,\n        errorCode: action.payload.code\n      };\n    case DISABLE_ERROR_STATE:\n      return {\n        ...state,\n        isError: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport MainReducer from \"./MainReducer\";\n\nconst appReducers = combineReducers({\n  MainReducer\n});\n\nexport default appReducers;\n","export const SET_SELECTED_USER = \"SET_SELECTED_USER\";\nexport const SET_CHART_DATA = \"SET_CHART_DATA\";\nexport const SET_USER_LIST = \"SET_USER_LIST\";\nexport const SET_USER_DATA = \"SET_USER_DATA\";\nexport const SET_ERROR_MSG = \"SET_ERROR_MSG\";\nexport const DISABLE_ERROR_STATE = \"DISABLE_ERROR_STATE\";\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  root: {\n    letterSpacing: 0,\n    opacity: 1\n  }\n});\n\nconst getFontFamily = type => {\n  switch (type) {\n    case \"heading1\":\n      return \"Open Sans\";\n    case \"heading2\":\n      return \"Open Sans\";\n    case \"heading3\":\n      return \"Open Sans\";\n    case \"heading4\":\n      return \"Open Sans\";\n    case \"heading5\":\n      return \"Open Sans\";\n    case \"headLine\":\n      return \"Open Sans\";\n    case \"button\":\n      return \"Open Sans\";\n    case \"title\":\n      return \"Open Sans\";\n    case \"subHeader\":\n      return \"Open Sans\";\n    case \"button\":\n      return \"Open Sans\";\n    default:\n      return \"Open Sans\";\n  }\n};\n\nconst getFontSize = type => {\n  switch (type) {\n    case \"heading1\":\n      return \"32px\";\n    case \"heading2\":\n      return \"24px\";\n    case \"heading3\":\n      return \"18px\";\n    case \"heading4\":\n      return \"16px\";\n    case \"heading5\":\n      return \"14px\";\n    case \"body1\":\n      return \"18px\";\n    case \"body2\":\n      return \"16px\";\n    case \"body3\":\n      return \"14px\";\n    case \"body4\":\n      return \"12px\";\n    case \"quote\":\n      return \"20px\";\n    case \"button\":\n      return \"14px\";\n\n    default:\n      return \"14px\";\n  }\n};\n\nconst getFontWeight = type => {\n  switch (type) {\n    case \"heading1\":\n      return \"600\";\n    case \"heading2\":\n      return \"600\";\n    case \"heading3\":\n      return \"600\";\n    case \"heading4\":\n      return \"600\";\n    case \"heading5\":\n      return \"600\";\n    case \"body1\":\n      return \"400\";\n    case \"body2\":\n      return \"400\";\n    case \"body3\":\n      return \"400\";\n    case \"body4\":\n      return \"400\";\n    case \"quote\":\n      return \"600\";\n    case \"button\":\n      return \"600\";\n    case \"bold\":\n      return \"800\";\n\n    default:\n      return \"400\";\n  }\n};\n\nconst _Typography = props => {\n  const { classes } = props;\n  //Log(props);\n  const { color, ...passedProps } = props;\n  const getColor = type => {\n    if (false) {\n      return \"#ffffff\";\n    } else {\n      switch (type) {\n        case \"heading1\":\n          return \"#3C3C3C\";\n        case \"heading2\":\n          return \"#3C3C3C\";\n        case \"heading3\":\n          return \"#3C3C3C\";\n        case \"heading4\":\n          return \"#3C3C3C\";\n        case \"heading5\":\n          return \"#3C3C3C\";\n        case \"button\":\n          return \"#FFFFFF\";\n\n        default:\n          return \"#3C3C3C\";\n      }\n    }\n  };\n  return (\n    <MuiTypography\n      className={classes.root}\n      style={{\n        fontFamily: props.fontFamily\n          ? props.fontFamily\n          : getFontFamily(props.type),\n        fontSize: props.fontSize ? props.fontSize : getFontSize(props.type),\n        fontWeight: props.fontWeight\n          ? props.fontWeight\n          : getFontWeight(props.type),\n        color: props.color ? props.color : getColor(props.type),\n        letterSpacing: \"0.04em\"\n      }}\n      {...passedProps}\n    >\n      {props.children}\n    </MuiTypography>\n  );\n};\n\n_Typography.propTypes = {\n  type: PropTypes.string\n};\n\n_Typography.defaultProps = {\n  type: \"body\"\n};\n\nconst mapStateToProps = state => ({\n  theme: state.themeReducer\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(withStyles(styles)(_Typography));\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n//import { Log } from \"./Logger\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport parse from \"autosuggest-highlight/parse\";\nimport match from \"autosuggest-highlight/match\";\n\nconst styles = theme => ({\n  selectRoot: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  searchRoot: {\n    color: \"#fff\"\n  },\n  clearButton: {\n    color: theme.palette.primary.black,\n    fontSize: \"1.5rem!important\"\n  },\n  searchInput: {\n    color: theme.palette.primary.black,\n    backgroundColor: theme.palette.primary.white\n    //border: `1px solid ${theme.palette.primary.black}`,\n  },\n  searchLabel: {\n    color: theme.palette.primary.black,\n    fontSize: \"14px\",\n    fontWeight: \"600\"\n  }\n});\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      searchQuery: \"\",\n      input:\n        props.selectData.length > 0\n          ? props.selectData.find(\n              (item, idx) => props.selectedValue === item.value\n            ).text\n          : \"\"\n    };\n  }\n  componentWillMount() {\n    // this.setState({\n    //   input: this.props.selectData.find(\n    //     (item, idx) => this.props.selectedValue === item.value\n    //   ).text\n    // });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"parentProps\", this.props.parentProps);\n    if (prevProps !== this.props && this.props.selectedValue !== null) {\n      this.setState({\n        input:\n          this.props.selectData.length > 0\n            ? this.props.selectData.find(\n                (item, idx) => this.props.selectedValue === item.value\n              ).value\n            : \"\"\n      });\n    }\n  }\n\n  onMeChange = (e, data) => {\n    //Log(\"Dropdown event\", e, data);\n    if (data !== null) {\n      this.setState({ input: data.text });\n      this.props.handleMeChange(data.value);\n    }\n  };\n\n  onSearchChange = (e, data) => {\n    //Log(\"searchChange\", data);\n    this.setState({ searchQuery: data.searchQuery });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Autocomplete\n        className=\"user\"\n        autoHighlight={true}\n        loading={true}\n        inputValue={this.state.input}\n        onInputChange={(event, data) => {\n          console.log(data, \"Dropdown input chnage Devent\");\n          this.setState({ input: data });\n          //event.persist();\n        }}\n        onChange={this.onMeChange}\n        //autoSelect={true}\n        id=\"combo-box-demo\"\n        style={{ width: \"100%\" }}\n        options={this.props.selectData}\n        getOptionLabel={option => option.text}\n        style={{ width: 300 }}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\" User\"\n            variant=\"outlined\"\n            style={{ width: \"100%\" }}\n          />\n        )}\n      />\n    );\n  }\n}\nexport default withStyles(styles)(Select);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"../Common/Typography\";\nimport Select from \"../Common/Select\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MaterialTable from \"material-table\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { userData, userOptions, processedData } from \"./data\";\nimport {\n  SET_SELECTED_USER,\n  SET_USER_LIST,\n  SET_USER_DATA,\n  SET_ERROR_MSG,\n  DISABLE_ERROR_STATE,\n  SET_CHART_DATA\n} from \"../../Actions/types\";\nimport { HorizontalBar } from \"react-chartjs-2\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\n\nconst styles = theme => ({\n  rootContainer: { width: \"100%\" },\n  paper: {\n    margin: \"17px\",\n    padding: \"20px\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: \"0px 0px 17px 0px\",\n      padding: \"20px\"\n    }\n  },\n  graphHeading: {\n    padding: \"0px 20px 20px 5px\"\n  },\n  tableContainer: {\n    borderRight: \"1px solid #EEEEEE\",\n    boxSizing: \"border-box\",\n    padding: \"40px\",\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"20px 10px\"\n    }\n  },\n  graphContainer: {\n    padding: \"20px 40px\",\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"20px 10px\"\n    }\n  },\n  errorMsgContainer: {\n    border: \"1px solid #D8D8D8\",\n    backgroundColor: \"#F7F8FA\",\n    minHeight: \"100px\",\n    padding: \"24px 40px\",\n    overflowY: \"auto\",\n    [theme.breakpoints.down(\"md\")]: {\n      padding: \"20px 20px\"\n    }\n  },\n  erroIcon: {\n    [theme.breakpoints.down(\"sm\")]: {\n      flexOrder: 1\n    }\n  }\n});\n\nclass QMoney extends Component {\n  constructor() {\n    super();\n    this.state = { input: \"\" };\n    this.getUserList = this.getUserList.bind(this);\n  }\n\n  componentWillMount() {\n    this.getUserList();\n    //this.getGraphResult({});\n  }\n\n  getUserList = () => {\n    const {\n      setUserListAction,\n      setUserDataAction,\n      setSelectedUser\n    } = this.props;\n    const getGraphResult = this.getGraphResult;\n    let userList = [];\n    return axios\n      .get(\"/config/json\")\n      .then(function(response) {\n        // handle success\n        console.log(\"User List\", response);\n        response.data.forEach((elem, idx) => {\n          userList.push({ text: elem.name, value: elem.name });\n        });\n        setUserListAction(userList);\n        setUserDataAction(response.data);\n        setSelectedUser(response.data[0].name);\n        //this.setState({ input: response.data[0].name });\n        getGraphResult(response.data[0]);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n  };\n\n  getGraphResult = userInfo => {\n    const {\n      setUserListAction,\n      setUserDataAction,\n      setErrorMsgAction,\n      disableErrorStateAction,\n      setChartDataAction\n    } = this.props;\n    let userList = [];\n    return axios\n      .post(\"/portfolio/analyze\", userInfo)\n      .then(function(response) {\n        // handle success\n        disableErrorStateAction();\n        console.log(\"User Returns\", response);\n        setChartDataAction(processedData(response.data));\n        // response.data.forEach((elem, idx) => {\n        //   userList.push({ text: elem.name, value: elem.name });\n        // });\n        // setUserListAction(userList);\n        // setUserDataAction(response.data);\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n        setErrorMsgAction(\n          error.message.includes(\"503\")\n            ? \"Large portfolio is not supported in your current plan.\"\n            : JSON.stringify(error),\n          error.message\n        );\n      })\n      .finally(function() {\n        // always executed\n      });\n  };\n\n  handleUserChange(val) {\n    console.log(\"userChanged\", val);\n    this.props.setSelectedUser(val);\n    console.log(\"State\", this.props.data);\n    this.getGraphResult(\n      this.props.data.userData.find((elem, idx) => elem.name === val)\n    );\n    // console.log(\"ProcessedData\", processedData());\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container className={classes.rootContainer}>\n        <Grid item xs={12}>\n          <AppBar position=\"static\">\n            <Toolbar style={{ padding: \"0px\" }}>\n              <div\n                style={{\n                  height: \"60px\",\n                  marginRight: \"10px\",\n                  cursor: \"pointer\",\n                  borderRight: \"1px solid #000\",\n                  textAlign: \"center\"\n                }}\n              >\n                <FontAwesomeIcon\n                  icon={[\"fal\", \"money-bill-wave-alt\"]}\n                  color=\"#fff\"\n                  size=\"lg\"\n                  alt=\"QMoney\"\n                  style={{\n                    padding: \"16px\"\n                  }}\n                ></FontAwesomeIcon>\n              </div>\n              <Typography type=\"heading4\" color=\"#fff\">\n                QMoney\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          style={{\n            borderBottom: \"1px solid #EEEEEE\",\n            padding: \"36px\",\n            backgroundColor: \"#FAFAFA\",\n            boxShadow:\n              \"0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2)\"\n          }}\n        >\n          <div>\n            <Typography type=\"heading2\">Transactions</Typography>\n          </div>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          style={{\n            backgroundColor: \"#F7F7F7\",\n            minHeight: \"calc(100vh - 173px)\"\n          }}\n        >\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={5}\n              lg={4}\n              className={classes.tableContainer}\n            >\n              <div\n                style={{\n                  width: \"60%\",\n                  textAlign: \"left\",\n                  marginBottom: \"15px\"\n                }}\n              >\n                <Select\n                  handleMeChange={this.handleUserChange.bind(this)}\n                  selectData={this.props.data.userList}\n                  selectedValue={this.props.data.selectedUser}\n                  parentProps={this.props}\n                />\n              </div>\n\n              <MaterialTable\n                title={\n                  <Typography type=\"heading3\">User Transaction</Typography>\n                }\n                columns={[\n                  {\n                    title: \"Date\",\n                    field: \"purchaseDate\",\n                    cellStyle: {\n                      opacity: \"0.87\",\n                      color: \"#000000\",\n                      fontFamily: \"Open Sans\",\n                      fontSize: \"13px\",\n                      fontWeight: \"500\",\n                      lineHeight: \"14px\"\n                    }\n                  },\n                  {\n                    title: \"Symbol\",\n                    field: \"symbol\",\n                    cellStyle: {\n                      opacity: \"0.87\",\n                      color: \"#000000\",\n                      fontFamily: \"Open Sans\",\n                      fontSize: \"13px\",\n                      fontWeight: \"500\",\n                      lineHeight: \"14px\"\n                    }\n                  },\n                  {\n                    title: \"Quantity\",\n                    field: \"quantity\",\n                    type: \"numeric\",\n                    cellStyle: {\n                      opacity: \"0.87\",\n                      color: \"#000000\",\n                      fontFamily: \"Open Sans\",\n                      fontSize: \"13px\",\n                      fontWeight: \"500\",\n                      lineHeight: \"14px\"\n                    }\n                  },\n                  {\n                    title: \"Type\",\n                    field: \"tradeType\",\n                    cellStyle: {\n                      opacity: \"0.87\",\n                      color: \"#000000\",\n                      fontFamily: \"Open Sans\",\n                      fontSize: \"13px\",\n                      fontWeight: \"500\",\n                      lineHeight: \"14px\"\n                    }\n                  }\n                ]}\n                data={\n                  this.props.data.selectedUser === null\n                    ? []\n                    : this.props.data.userData.find(\n                        (elem, idx) =>\n                          elem.name === this.props.data.selectedUser\n                      ).portfolioTrades\n                }\n                options={{\n                  paging: false,\n                  sorting: true,\n                  search: false,\n\n                  headerStyle: {\n                    opacity: \"0.87\",\n                    color: \"#000000\",\n                    fontFamily: \"Open Sans\",\n                    fontSize: \"12px\",\n                    fontWeight: \"500\",\n                    lineHeight: \"14px\"\n                  }\n                }}\n              />\n            </Grid>\n            {this.props.data.isError ? (\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={6}\n                lg={8}\n                className={classes.graphContainer}\n              >\n                <div style={{ margin: \"17px 17px 50px 17px\" }}>\n                  <Typography type=\"heading4\">\n                    Portfolio generated by the transactions\n                  </Typography>\n                </div>\n                <Grid\n                  container\n                  className={classes.errorMsgContainer}\n                  //direction=\"column-reverse\"\n                >\n                  <Grid item xs={12} sm={12} md={10} lg={12}>\n                    <div className={classes.errorInfo}>\n                      <Typography type=\"heading2\" color=\"#B6B6B6\">\n                        <FontAwesomeIcon\n                          icon={[\"fas\", \"exclamation-square\"]}\n                          color=\"#B6B6B6\"\n                          size=\"1x\"\n                          alt=\"!\"\n                          style={{\n                            //padding: \"16px\",\n                            marginRight: \"10px\"\n                          }}\n                        ></FontAwesomeIcon>\n                        Error - {this.props.data.errorCode}\n                      </Typography>\n                      <div style={{ marginTop: \"15px\" }}>\n                        <p\n                          style={{\n                            fontFamily: \"Open Sans\",\n                            fontSize: \"16px\",\n                            fontWeight: \"400\",\n                            letterSpacing: \"0.04em\",\n                            boxShadow: \"0 0 black\",\n                            lineHeight: \"40px\",\n                            color: \"red\"\n                          }}\n                        >\n                          {this.props.data.errorMsg}\n                        </p>\n                      </div>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n            ) : (\n              <Grid\n                item\n                xs={12}\n                sm={12}\n                md={6}\n                lg={7}\n                className={classes.graphContainer}\n              >\n                <div style={{ margin: \"17px 17px 50px 17px\" }}>\n                  <Typography type=\"heading4\">\n                    Portfolio generated by the transactions\n                  </Typography>\n                </div>\n                <Paper className={classes.paper}>\n                  <div className={classes.graphHeading}>\n                    <Typography type=\"heading3\">Absolute Returns </Typography>\n                    <Typography type=\"body2\">\n                      Return on investment since the time of purchase.\n                    </Typography>\n                  </div>\n                  <HorizontalBar\n                    options={{\n                      cornerRadius: 20,\n                      legend: { display: false },\n                      scales: {\n                        yAxes: [\n                          {\n                            barPercentage: 0.3\n                          }\n                        ]\n                      }\n                    }}\n                    data={{\n                      labels: this.props.data.chartData.labelArray,\n                      datasets: [\n                        {\n                          label: \"Annual Return\",\n                          backgroundColor: this.props.data.chartData.annualReturnArray.map(\n                            data => (data > 0 ? \"#2D99FF\" : \"#F7517F\")\n                          ),\n                          borderColor: this.props.data.chartData.annualReturnArray.map(\n                            data => (data > 0 ? \"#2D99FF\" : \"#F7517F\")\n                          ),\n                          radius: 5,\n                          borderWidth: 1,\n                          borderRadius: 5,\n                          hoverBackgroundColor: this.props.data.chartData.annualReturnArray.map(\n                            data =>\n                              data > 0\n                                ? \"rgba(45,153,255,0.8)\"\n                                : \"rgba(247,81,143,0.8)\"\n                          ),\n                          //hoverBorderColor: \"rgba(255,99,132,1)\",\n                          data: this.props.data.chartData.annualReturnArray.map(\n                            data => (data * 100).toFixed(2)\n                          )\n                        }\n                        // {\n                        //   label: \"Annual Return\",\n                        //   backgroundColor: \"#000\",\n                        //   borderColor: \"#000\",\n                        //   borderWidth: 1,\n                        //   hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n                        //   hoverBorderColor: \"rgba(255,99,132,1)\",\n                        //   data: processedData().annualReturnArray.map(data =>\n                        //     data > 0 ? data : null\n                        //   )\n                        // }\n                      ]\n                    }}\n                  />\n                </Paper>\n                <Paper className={classes.paper}>\n                  <div className={classes.graphHeading}>\n                    <Typography type=\"heading3\">Annualized Returns </Typography>\n                    <Typography type=\"body2\">\n                      Average return on investment compounded over a period of\n                      time.\n                    </Typography>\n                  </div>\n                  <HorizontalBar\n                    options={{\n                      cornerRadius: 20,\n                      legend: { display: false },\n                      scales: {\n                        yAxes: [\n                          {\n                            barPercentage: 0.3\n                          }\n                        ]\n                      }\n                    }}\n                    data={{\n                      labels: this.props.data.chartData.labelArray,\n                      datasets: [\n                        {\n                          label: \"Annual Return\",\n                          backgroundColor: this.props.data.chartData.absoluteReturnArray.map(\n                            data => (data > 0 ? \"#2D99FF\" : \"#F7517F\")\n                          ),\n                          borderColor: this.props.data.chartData.absoluteReturnArray.map(\n                            data => (data > 0 ? \"#2D99FF\" : \"#F7517F\")\n                          ),\n                          radius: 5,\n                          borderWidth: 1,\n                          borderRadius: 5,\n                          hoverBackgroundColor: this.props.data.chartData.absoluteReturnArray.map(\n                            data =>\n                              data > 0\n                                ? \"rgba(45,153,255,0.8)\"\n                                : \"rgba(247,81,143,0.8)\"\n                          ),\n                          //hoverBorderColor: \"rgba(255,99,132,1)\",\n                          data: this.props.data.chartData.absoluteReturnArray.map(\n                            data => (data * 100).toFixed(2)\n                          )\n                        }\n                        // {\n                        //   label: \"Annual Return\",\n                        //   backgroundColor: \"#000\",\n                        //   borderColor: \"#000\",\n                        //   borderWidth: 1,\n                        //   hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n                        //   hoverBorderColor: \"rgba(255,99,132,1)\",\n                        //   data: processedData().annualReturnArray.map(data =>\n                        //     data > 0 ? data : null\n                        //   )\n                        // }\n                      ]\n                    }}\n                  />\n                </Paper>\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedUser: user => dispatch({ type: SET_SELECTED_USER, payload: user }),\n  setUserListAction: userList =>\n    dispatch({ type: SET_USER_LIST, payload: userList }),\n  setUserDataAction: userData =>\n    dispatch({ type: SET_USER_DATA, payload: userData }),\n\n  setErrorMsgAction: (msg, code) =>\n    dispatch({ type: SET_ERROR_MSG, payload: { msg, code } }),\n  disableErrorStateAction: () =>\n    dispatch({ type: DISABLE_ERROR_STATE, payload: {} }),\n  setChartDataAction: data => dispatch({ type: SET_CHART_DATA, payload: data })\n});\n\nconst mapStateToProps = state => ({\n  data: state.MainReducer\n});\n\nQMoney.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(QMoney));\n","export const userOptions = [\n  { text: \"userName\", value: \"userName\" },\n  { text: \"Anand\", value: \"Anand\" }\n];\n\nexport const userData = [\n  {\n    name: \"Anand\",\n    trades: [\n      {\n        symbol: \"AAPL\",\n        quantity: 100,\n        tradeType: \"BUY\",\n        purchaseDate: \"2019-01-02\"\n      },\n      {\n        symbol: \"MSFT\",\n        quantity: 10,\n        tradeType: \"BUY\",\n        purchaseDate: \"2019-01-02\"\n      },\n      {\n        symbol: \"GOOGL\",\n        quantity: 50,\n        tradeType: \"BUY\",\n        purchaseDate: \"2019-01-02\"\n      }\n    ]\n  },\n  {\n    name: \"userName\",\n    trades: [\n      {\n        symbol: \"AAPL\",\n        quantity: 100,\n        tradeType: \"BUY\",\n        purchaseDate: \"2019-01-02\"\n      },\n      {\n        symbol: \"MSFT\",\n        quantity: 10,\n        tradeType: \"BUY\",\n        purchaseDate: \"2019-01-02\"\n      },\n      {\n        symbol: \"GOOGL\",\n        quantity: 50,\n        tradeType: \"BUY\",\n        purchaseDate: \"2019-01-02\"\n      }\n    ]\n  }\n];\n\nexport const apiResponse = {\n  name: \"Anand\",\n  annualizedReturns: [\n    {\n      symbol: \"AAPL\",\n      annualizedReturn: 0.8997969846498599,\n      totalReturns: 0.9982568274259153\n    },\n    {\n      symbol: \"MSFT\",\n      annualizedReturn: -0.6443295933499298,\n      totalReturns: 0.7099949773982923\n    },\n    {\n      symbol: \"GOOGL\",\n      annualizedReturn: 0.3613690159456233,\n      totalReturns: 0.39484034267912765\n    },\n    {\n      symbol: \"AAPL\",\n      annualizedReturn: 0.8997969846498599,\n      totalReturns: 0.9982568274259153\n    },\n    {\n      symbol: \"MSFT\",\n      annualizedReturn: -0.6443295933499298,\n      totalReturns: 0.7099949773982923\n    },\n    {\n      symbol: \"GOOGL\",\n      annualizedReturn: 0.3613690159456233,\n      totalReturns: 0.39484034267912765\n    }\n  ],\n  calculationsDate: \"2020-02-02\"\n};\n\nexport const processedData = response => {\n  let labelArray = [];\n  let absoluteReturnArray = [];\n  let annualReturnArray = [];\n  response.annualizedReturns.forEach((elem, idx) => {\n    labelArray.push(elem.symbol);\n    absoluteReturnArray.push(elem.totalReturns);\n    annualReturnArray.push(elem.annualizedReturn);\n  });\n  return { labelArray, absoluteReturnArray, annualReturnArray };\n};\n","import React from \"react\";\nimport \"./index.css\";\nimport { faMoneyBillWaveAlt } from \"@fortawesome/pro-light-svg-icons\";\nimport { faExclamationSquare } from \"@fortawesome/pro-solid-svg-icons\";\nimport QMoney from \"./Components/QMoney/QMoney\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nlibrary.add(faMoneyBillWaveAlt, faExclamationSquare);\n\nfunction App() {\n  return <QMoney />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./Reducers\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(rootReducer);\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}